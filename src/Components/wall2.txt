import React, { useState, useEffect } from "react";
import axios from "axios";
import { useNavigate } from "react-router-dom";
import 'react-responsive-modal/styles.css';
import { Modal } from 'react-responsive-modal';
import "../Styles/home.css";

export default function Wallpaper() {
  const navigate = useNavigate();

  const [locationsData, setLocationsData] = useState([]);
  const [restaurants, setRestaurants] = useState([]);
  const [selectedCity, setSelectedCity] = useState("");
  const [inputText, setInputText] = useState("");
  const [suggestions, setSuggestions] = useState([]);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState(null);
  const [openLoginModal, setOpenLoginModal] = useState(false);
  const [openAccountModal, setOpenAccountModal] = useState(false);

  useEffect(() => {
    fetchLocations();
  }, []);

  const fetchLocations = async () => {
    try {
      const response = await axios.get("http://localhost:8900/getAllLocations");
      setLocationsData(response.data.locations);
    } catch (error) {
      setError("Error fetching locations");
      console.error("Error fetching data:", error);
    } finally {
      setLoading(false);
    }
  };

  const handleLocation = (event) => {
    const city = event.target.value;
    setSelectedCity(city);
    fetchRestaurants(city);
  };

  const fetchRestaurants = async (city) => {
    setLoading(true);
    try {
      const response = await axios.get(`http://localhost:8900/getRestaurantsByLocation/${city}`);
      setRestaurants(response.data.restaurants);
      setSuggestions([]);
    } catch (error) {
      setError("Error fetching restaurants");
      console.error("Error fetching restaurants:", error);
    } finally {
      setLoading(false);
    }
  };

  const handleSearch = (event) => {
    const text = event.target.value;
    const filteredRestaurants = restaurants.filter((item) =>
      item.name.toLowerCase().includes(text.toLowerCase())
    );
    setSuggestions(filteredRestaurants);
    setInputText(text);
  };

  const handleSuggestionClick = (suggestion) => {
    if (suggestion._id) {
      navigate(`/details/${suggestion._id}`);
    } else {
      console.error("Invalid suggestion:", suggestion);
    }
  };

  return (
    <div>
      <img src="./Assets/food.png" alt="Food" id="myFoodImg" />
      <div id="myTop">
        <div className="inner-div">
          <button className="loginBtn" onClick={() => setOpenLoginModal(true)}>Login</button>
          <button className="accountBtn" onClick={() => setOpenAccountModal(true)}>Create an account</button>
        </div>
        <div className="myLogo">e!</div>
        <div className="mainTitle">
          Find the best restaurants, cafes, and bars
        </div>
        <div className="searchDiv">
          <div>
            <select
              className="myLocations"
              defaultValue=""
              onChange={handleLocation}
              aria-label="Select City"
            >
              <option value="" disabled>
                --Select City--
              </option>
              {locationsData.map((item) => (
                <option key={item.location_id} value={item.name}>
                  {`${item.name}, ${item.city}`}
                </option>
              ))}
            </select>
          </div>
          <div className="restSearch">
            <i className="bi bi-search searchIcon"></i>
            <input
              type="text"
              className="searchInput"
              placeholder="Search for restaurants"
              value={inputText}
              onChange={handleSearch}
              aria-label="Search for restaurants"
            />
            {suggestions.length > 0 && (
              <ul className="suggestionsList">
                {suggestions.map((suggestion, index) => (
                  <li
                    key={index}
                    onClick={() => handleSuggestionClick(suggestion)}
                  >
                    {`${suggestion.name}   ${suggestion.city}`}
                  </li>
                ))}
              </ul>
            )}
          </div>
        </div>
        {loading && <div>Loading...</div>}
        {error && <div className="error">{error}</div>}
      </div>

      <Modal open={openLoginModal} onClose={() => setOpenLoginModal(false)} center>
        <h2>Login</h2>
        <div className="modal-content">
          <div className="modal-field my-2">
            <input type="email" id="email" name="email" placeholder="Email"/>
          </div>
          <div className="modal-field my-2">
            <input type="password" id="password" name="password" placeholder="Password" />
          </div>
          <div className="modal-buttons mx-2 my-2">
            <button className="loginButton btn btn-primary mx-2">Login</button>
            <button className="cancelButton btn btn-outline-dark" onClick={() => setOpenLoginModal(false)}>Cancel</button>
          </div>
          <div className="social-login d-flex flex-column gap-2">
            <button className="facebookButton btn btn-outline-primary">Continue with Facebook</button>
            <button className="googleButton btn btn-outline-danger">Continue with Google</button>
          </div>
        </div>
      </Modal>

      <Modal open={openAccountModal} onClose={() => setOpenAccountModal(false)} center>
        <h2>Create an Account</h2>
        <div className="modal-content">
          <div className="modal-field my-2">
            <input type="email" id="email" name="email" placeholder="Email"/>
          </div>
          <div className="modal-field my-2">
            <input type="text" id="name" name="name" placeholder="Enter Your name"/>
          </div>
          <div className="modal-field my-2">
            <input type="password" id="password" name="password" placeholder="Password" />
          </div>
          <div className="modal-buttons mx-2 my-2">
            <button className="loginButton btn btn-primary mx-2">Create an Account</button>
            <button className="cancelButton btn btn-outline-dark" onClick={() => setOpenAccountModal(false)}>Cancel</button>
          </div>
          <div className="social-login d-flex flex-column gap-2">
            <button className="facebookButton btn btn-outline-primary">Continue with Facebook</button>
            <button className="googleButton btn btn-outline-danger">Continue with Google</button>
          </div>
        </div>
      </Modal>
    </div>
  );
}
